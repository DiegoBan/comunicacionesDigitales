% Modulación PAM de una señal sinusoidal
% Este script realiza la modulación por amplitud de pulso (PAM) de una señal
% sinusoidal utilizando muestreo natural e instantáneo

clear all;
close all;
clc;

%% Parámetros configurables
% Señal sinusoidal
A = 1;                  % Amplitud de la señal
fc = 1000;              % Frecuencia de la señal en Hz
Ts = 1/100000;          % Período de muestreo (10 µs)
t_final = 0.01;         % Tiempo final de simulación (10 ms)

% Parámetros para modulación PAM con muestreo natural
fs_natural = 8000;      % Frecuencia de muestreo natural (configurable)
d_natural = 0.5;        % Ciclo de trabajo (τ/Ts) (configurable)

% Parámetros para modulación PAM con muestreo instantáneo
fs_instantaneo = 8000;  % Frecuencia de muestreo instantáneo (configurable)
d_instantaneo = 0.5;    % Ciclo de trabajo (τ/T) (configurable)

%% Generación de vectores de tiempo y señal sinusoidal
t = 0:Ts:t_final;       % Vector de tiempo
m_t = A * sin(2*pi*fc*t); % Señal sinusoidal m(t)

%% Modulación PAM con muestreo natural
% Período y duración del pulso
T_natural = 1/fs_natural;
tau_natural = d_natural * T_natural;

% Generación de la señal pulsante para PAM natural
p_natural = zeros(size(t));
for i = 1:length(t)
    % Calcula el tiempo dentro de un período
    t_mod = mod(t(i), T_natural);
    % Si el tiempo está dentro de la duración del pulso, p(t) = 1
    if t_mod < tau_natural
        p_natural(i) = 1;
    end
end

% Aplicación de la modulación PAM natural
pam_natural = m_t .* p_natural;

%% Modulación PAM con muestreo instantáneo
% Período y duración del pulso
T_instantaneo = 1/fs_instantaneo;
tau_instantaneo = d_instantaneo * T_instantaneo;

% Generación de la señal pulsante para PAM instantáneo
p_instantaneo = zeros(size(t));
pam_instantaneo = zeros(size(t));

for i = 1:length(t)
    % Calcula el tiempo dentro de un período
    t_mod = mod(t(i), T_instantaneo);
    
    % Si el tiempo está dentro de la duración del pulso, p(t) = 1
    if t_mod < tau_instantaneo
        p_instantaneo(i) = 1;
        
        % Para el muestreo instantáneo, capturamos el valor al inicio del pulso
        if t_mod < Ts
            % Encuentra el índice correspondiente al inicio del pulso actual
            current_pulse_start = round(t(i) / T_instantaneo) * T_instantaneo;
            idx = find(abs(t - current_pulse_start) < Ts, 1);
            
            % Si encontramos un índice válido, usamos ese valor para todo el pulso
            if ~isempty(idx)
                pulse_value = m_t(idx);
            else
                pulse_value = 0;
            end
        end
        
        pam_instantaneo(i) = pulse_value * p_instantaneo(i);
    end
end

%% Visualización de resultados
figure;
subplot(3,1,1);
plot(t, m_t);
title('Señal sinusoidal original m(t)');
xlabel('Tiempo (s)');
ylabel('Amplitud');
grid on;

subplot(3,1,2);
plot(t, pam_natural);
title('Señal PAM con muestreo natural');
xlabel('Tiempo (s)');
ylabel('Amplitud');
grid on;

subplot(3,1,3);
plot(t, pam_instantaneo);
title('Señal PAM con muestreo instantáneo');
xlabel('Tiempo (s)');
ylabel('Amplitud');
grid on;

% Ajustar los ejes y para tener el mismo rango en todas las gráficas
ylim_val = [-1.1*A 1.1*A];
subplot(3,1,1); ylim(ylim_val);
subplot(3,1,2); ylim(ylim_val);
subplot(3,1,3); ylim(ylim_val);

%% Cálculo de la transformada de Fourier
% Para la actividad del laboratorio presencial
N = length(t);
f = (0:N-1)/(N*Ts);  % Vector de frecuencias

% Solo consideramos las frecuencias positivas hasta la mitad del espectro
f_positivas = f(1:floor(N/2));

% Cálculo de la FFT para cada señal
FFT_original = fft(m_t)/N;
FFT_natural = fft(pam_natural)/N;
FFT_instantaneo = fft(pam_instantaneo)/N;

% Tomamos solo la parte positiva del espectro
FFT_original_positivo = abs(FFT_original(1:floor(N/2)));
FFT_natural_positivo = abs(FFT_natural(1:floor(N/2)));
FFT_instantaneo_positivo = abs(FFT_instantaneo(1:floor(N/2)));

% Visualización de los espectros
figure;
subplot(3,1,1);
plot(f_positivas, FFT_original_positivo);
title('Espectro de la señal original');
xlabel('Frecuencia (Hz)');
ylabel('|FFT|');
grid on;
xlim([0 5*fc]);  % Limitamos la visualización a 5 veces la frecuencia de la señal

subplot(3,1,2);
plot(f_positivas, FFT_natural_positivo);
title('Espectro de la señal PAM con muestreo natural');
xlabel('Frecuencia (Hz)');
ylabel('|FFT|');
grid on;
xlim([0 5*fc]);

subplot(3,1,3);
plot(f_positivas, FFT_instantaneo_positivo);
title('Espectro de la señal PAM con muestreo instantáneo');
xlabel('Frecuencia (Hz)');
ylabel('|FFT|');
grid on;
xlim([0 5*fc]);